{"version":3,"sources":["components/Header/Header.jsx","components/Form/Form.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/ToggleAll/ToggleAll.jsx","components/Main/Main.jsx","components/Footer/Footer.jsx","App.js","hooks/useLocalStorage.js","index.js"],"names":["Header","props","className","Form","onAddTodo","notificationPosition","position","useState","value","setValue","type","onChange","event","target","onKeyPress","e","trim","key","toast","error","newTodo","id","Date","title","completed","success","placeholder","Todo","todo","onAddChecked","onRemoveTodo","onEditTitle","isEditing","setIsEditing","classNames","editing","checked","onDoubleClick","onClick","onBlur","modifiedTodo","onKeyDown","TodoList","todos","map","ToggleAll","onToggleTodos","pendingToDo","isChecked","setIsChecked","isFalse","useEffect","htmlFor","Main","length","Footer","quantity","onFilterTodos","onRemoveCompleted","sortedTodos","setSortedTodos","isCompleted","some","href","selected","defaultProps","App","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","setItem","stringify","useLocalStorage","setNewTodo","renderedTodos","setRenderedTodos","filter","autoClose","checkedTodos","item","currentState","filtered","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbe879c6.chunk.js","sourcesContent":["import React from 'react';\n\nexport function Header(props) {\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n    </header>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nexport function Form({ onAddTodo }) {\n  const notificationPosition = { position: 'top-left' };\n  const [value, setValue] = useState('');\n  const handleInputValue = event => setValue(event.target.value);\n\n  const handleKeypress = (e) => {\n    if (!value.trim() && e.key === 'Enter') {\n      toast.error('You cannot add empty field', notificationPosition);\n    }\n\n    if (e.key === 'Enter' && value.trim()) {\n      const newTodo = {\n        id: `${+new Date()}`,\n        title: value,\n        completed: false,\n      };\n\n      onAddTodo(newTodo);\n      setValue('');\n      toast.success('Congratulation your Todo was added', notificationPosition);\n    }\n  };\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleInputValue}\n        onKeyPress={handleKeypress}\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n      />\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onAddTodo: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport function Todo({\n  todo,\n  onAddChecked,\n  onRemoveTodo,\n  onEditTitle,\n}) {\n  const { title, completed, id } = todo;\n  const [isEditing, setIsEditing] = useState(false);\n  const [value, setValue] = useState(todo.title);\n\n  const changeTitle = (event) => {\n    setValue(event.target.value);\n  };\n\n  const modifyTodo = () => {\n    if (!value) {\n      setValue(title);\n      setIsEditing(false);\n\n      return;\n    }\n\n    const modifiedTodo = {\n      ...todo,\n      title: value,\n    };\n\n    onEditTitle(modifiedTodo);\n    setIsEditing(false);\n  };\n\n  const checkPressedButton = (event) => {\n    if (event.key === 'Enter') {\n      setIsEditing(false);\n    }\n  };\n\n  const undoChanges = (e) => {\n    if (e.key === 'Escape') {\n      setValue(title);\n      setIsEditing(false);\n    }\n  };\n\n  const switchStateTodo = () => {\n    onAddChecked({\n      ...todo,\n      completed: !completed,\n    });\n  };\n\n  return (\n    <li className={classNames({\n      completed,\n      editing: isEditing,\n    })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          onChange={switchStateTodo}\n          className=\"toggle\"\n        />\n        <label onDoubleClick={() => setIsEditing(true)}>\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => onRemoveTodo(id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={value}\n        onChange={changeTitle}\n        onBlur={modifyTodo}\n        onKeyPress={checkPressedButton}\n        onKeyDown={undoChanges}\n      />\n    </li>\n\n  );\n}\n\nTodo.propTypes = {\n  onAddChecked: PropTypes.func.isRequired,\n  onEditTitle: PropTypes.func.isRequired,\n  onRemoveTodo: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Todo } from '../Todo';\n\nexport function TodoList({\n  todos,\n  onAddChecked,\n  onRemoveTodo,\n  onEditTitle,\n}) {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          onAddChecked={onAddChecked}\n          onRemoveTodo={onRemoveTodo}\n          onEditTitle={onEditTitle}\n        />\n      ))}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  onAddChecked: PropTypes.func.isRequired,\n  onRemoveTodo: PropTypes.func.isRequired,\n  onEditTitle: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ToggleAll({ onToggleTodos, pendingToDo }) {\n  const [isChecked, setIsChecked] = useState(false);\n  const isFalse = !pendingToDo;\n\n  useEffect(() => {\n    setIsChecked(isFalse);\n  }, [isFalse]);\n\n  const handleIsAllChecked = () => {\n    setIsChecked(!isChecked);\n    onToggleTodos(!isChecked);\n  };\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        onChange={handleIsAllChecked}\n        checked={isChecked}\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    </>\n  );\n}\n\nToggleAll.propTypes = {\n  onToggleTodos: PropTypes.func.isRequired,\n  pendingToDo: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoList } from '../TodoList';\nimport { ToggleAll } from '../ToggleAll';\n\nexport function Main({\n  todos,\n  onAddChecked,\n  pendingToDo,\n  onToggleTodos,\n  onRemoveTodo,\n  onEditTitle,\n}) {\n  return (\n    <section className=\"main\">\n      {todos.length > 0\n        && (\n          <ToggleAll\n            pendingToDo={pendingToDo}\n            onToggleTodos={onToggleTodos}\n          />\n        )\n      }\n\n      {todos.length > 0\n        && (\n          <TodoList\n            todos={todos}\n            onAddChecked={onAddChecked}\n            onRemoveTodo={onRemoveTodo}\n            onEditTitle={onEditTitle}\n          />\n        )\n      }\n    </section>\n  );\n}\n\nMain.propTypes = {\n  pendingToDo: PropTypes.number.isRequired,\n  onToggleTodos: PropTypes.func.isRequired,\n  onAddChecked: PropTypes.func.isRequired,\n  onRemoveTodo: PropTypes.func.isRequired,\n  onEditTitle: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n\nMain.defaultProps = {\n  todos: [],\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport function Footer({\n  quantity,\n  onFilterTodos,\n  onRemoveCompleted,\n  todos,\n}) {\n  const [sortedTodos, setSortedTodos] = useState('all');\n  const isCompleted = todos.some(({ completed }) => completed);\n\n  const handleSortByAll = () => {\n    setSortedTodos('all');\n    onFilterTodos('all');\n  };\n\n  const handleSortByActive = () => {\n    setSortedTodos('active');\n    onFilterTodos('active');\n  };\n\n  const handleSortByCompleted = () => {\n    setSortedTodos('completed');\n    onFilterTodos('completed');\n  };\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${quantity} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={classNames(\n              { selected: sortedTodos === 'all' },\n            )}\n            onClick={handleSortByAll}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={classNames(\n              { selected: sortedTodos === 'active' },\n            )}\n            onClick={handleSortByActive}\n\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={classNames(\n              { selected: sortedTodos === 'completed' },\n            )}\n            onClick={handleSortByCompleted}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {isCompleted\n        && (\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={onRemoveCompleted}\n          >\n            Clear completed\n          </button>\n        )\n      }\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  quantity: PropTypes.number.isRequired,\n  onRemoveCompleted: PropTypes.func.isRequired,\n  onFilterTodos: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Header } from './components/Header';\nimport { Form } from './components/Form';\nimport { Main } from './components/Main';\nimport { Footer } from './components/Footer';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport function App() {\n  const [todos, setNewTodo] = useLocalStorage('todos', []);\n  const [renderedTodos, setRenderedTodos] = useState([]);\n\n  useEffect(() => {\n    setRenderedTodos(todos);\n  }, [todos]);\n\n  const addNewTodo = todo => setNewTodo([...todos, todo]);\n\n  const handleCheckedTodos = (todo) => {\n    const checkedTodos = todos.map(\n      item => ((item.id === todo.id) ? todo : item),\n    );\n\n    setNewTodo(checkedTodos);\n  };\n\n  const pendingToDo = todos.filter(\n    todo => !todo.completed,\n  ).length;\n\n  const toggleAllTodos = (currentState) => {\n    setNewTodo(todos.map(todo => ({\n      ...todo,\n      completed: currentState,\n    })));\n  };\n\n  const handleFilterTodosByState = (currentState) => {\n    let filtered;\n\n    switch (currentState) {\n      case 'active':\n        filtered = todos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        filtered = todos.filter(todo => todo.completed);\n        break;\n\n      default:\n        filtered = [...todos];\n    }\n\n    setRenderedTodos(filtered);\n  };\n\n  const handlerRemoveTodo = (id) => {\n    setNewTodo(todos.filter(todo => todo.id !== id));\n  };\n\n  const handlerRemoveCompletedTodos = () => {\n    setNewTodo(todos.filter(todo => !todo.completed));\n  };\n\n  const handlerEditTodoTitle = (modifiedTodo) => {\n    setNewTodo(todos.map(todo => (\n      todo.id === modifiedTodo.id ? modifiedTodo : todo\n    )));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <ToastContainer autoClose={3000} />\n      <Header />\n      <Form onAddTodo={addNewTodo} />\n      <Main\n        todos={renderedTodos}\n        onAddChecked={handleCheckedTodos}\n        onRemoveTodo={handlerRemoveTodo}\n        pendingToDo={pendingToDo}\n        onToggleTodos={toggleAllTodos}\n        onEditTitle={handlerEditTodoTitle}\n      />\n      {todos.length > 0\n        && (\n          <Footer\n            quantity={pendingToDo}\n            onFilterTodos={handleFilterTodosByState}\n            onRemoveCompleted={handlerRemoveCompletedTodos}\n            todos={todos}\n          />\n        )\n      }\n    </section>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport const useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n\n  return [state, setState];\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}